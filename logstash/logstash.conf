# Sample Logstash configuration for creating a simple
# Beats -> Logstash -> Elasticsearch pipeline.

input {
  beats {
    port => 5044
    type => "metric"
  }
  file {
    path => "/home/joelleiheehoo/elk-training/web/logs/access*.log"
    type => "access"
  }
  file {
    path => "/home/joelleiheehoo/elk-training/web/logs/application*.log"
    type => "application"
    codec => multiline {
      pattern => "^%{TIMESTAMP_ISO8601}"
      negate => true
      what => "previous"
    }
  }
}

filter {
  date {
    match => ["timestamp", "dd/MMM/YYYY:HH:mm:ss Z"]
    target => "@timestamp"
  }
}

filter {
  if [type] == "access" {
    grok {
      match => { "message" => "%{COMMONAPACHELOG} %{NUMBER:durationMs}" } 
    }
  }
  if [type] == "application" {
    grok {
      match => { "message" => "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY}[T ]%{HOUR}:?%{MINUTE}(?::?%{SECOND})?%{ISO8601_TIMEZONE}?)\s*(?<level>[a-zA-Z0-9._-]+)\s*(?<logger>[a-zA-Z0-9._-]+)\s*(?<message>(.|\r|\n)*)"} 
    }
    if [status] == 200 or "_grokparsefailure" in [tags] {
      drop { }
    }
  }
}

filter {
  if [type] == "access" {
    mutate {
      remove_field => ["message", "timestamp"] 
    }
  }
  if [type] == "application" {
    mutate {
      remove_field => ["timestamp"]
    }
  }
}

filter {
  mutate {
    convert => {
      "durationMs" => "integer"
    }
  }
}

output {
  if [type] == "metric" {
    elasticsearch {
      hosts => ["http://localhost:9200"]
      index => "metricbeat-%{+YYYY.MM.dd}"
      #user => "elastic"
      #password => "changeme"
    }
  }
  else {
    elasticsearch {
      hosts => ["http://localhost:9200"]
      index => "logstash-%{+YYYY.MM.dd}"
    }
  }
  stdout { codec => rubydebug }
#  file {
#    path => "/home/joelleiheehoo/elk-training/logs/%{type}.json"
#  }
}
